:root {
    --homePageSectionWidth: 300px;
    --homePageSectionHeight: 400px;
    --homePageSectionBorderRadius: 12px;
    --homePageColorOne: white;
    --homePageColorTwo: rgb(125, 125, 255);
    --homePageTransitionDuration: 0.3s;
    --homePageImageTransitionDuration: 0.5s;
}

/* Allows canvas to take up full window */
html, body {
    margin: 0px;
    padding: 0px;
}

/* Allows the content in the body to be centered even with the weird canvas stuff */
body {
    display: grid;
    grid-template: 1fr / 1fr;
    justify-items: center;
    align-items: center;
}

/* Title */
#homePageTitle {
    position: absolute;
    top: 2.5%;
    font-size: 2.5rem;
    font-weight: 600;
}

/* Animation Control Div */
#animationControl {
    position: absolute;
    top: 10%;
    display: flex;
    flex-direction: row;
    gap: 10px;
    font-size: 1.5rem;
    align-items: center;
    justify-content: center;

    span {
        color: var(--homePageColorOne);
    }

    button {   
        border: 2px solid var(--homePageColorOne);
        background-color: var(--homePageColorOne);
        border-radius: 20px;
        padding: 0px 10px;
        width: 40px;
        height: 24px;
        transition: all var(--homePageTransitionDuration);

        &:hover {
            cursor: pointer;
            border: 2px solid var(--homePageColorTwo);
        }

        &::before {
            position: absolute;
            content: "";
            height: 14px;
            width: 14px;
            border-radius: 100%;
            background-color: var(--homePageColorTwo);
            top: 5px;
            right: 4px;
            transition: all var(--homePageImageTransitionDuration);
            border: 2px solid var(--homePageColorTwo);
        }
    }

    button[data-on='false'] {
        &::before {
            right: 18px;
            background-color: var(--homePageColorOne);
        }
    }
}

/* Canvas element that is essentially the background */
#backgroundScene {
    background-color: black;
    grid-area: 1 / 1 / 1 / 1;
}

/* Centered in window, contains both projects and about me windows */
#homePageContent {
    grid-area: 1 / 1 / 1 / 1;
    display: flex;
    flex-direction: row;
    gap: 60px;
    align-items: center;
}

.homePageSection:has(button:hover) {
    box-shadow: 0px 0px 30px var(--homePageColorTwo);
}

/* Both projects and about me window */
.homePageSection {
    display: flex;
    flex-direction: column-reverse;
    background-color: rgba(50, 50, 50, 0.9);
    border-radius: var(--homePageSectionBorderRadius);
    transition: all var(--homePageTransitionDuration);
    position: relative;
    width: var(--homePageSectionWidth);
    height: var(--homePageSectionHeight);
    justify-content: center;
    align-items: center;
    gap: 20px;
    opacity: 100%;
    box-shadow: 0px 0px 20px var(--homePageColorOne);

    /* Div within that has image border */
    .homePageImageContainer {
        border-radius: calc(var(--homePageSectionBorderRadius) * 0.5);
        border: 4px solid var(--homePageColorOne);
        width: 70%;
        transition: all var(--homePageTransitionDuration);
    }

    /* Image itself */
    img {
        width: 100%;
        height: 100%;
        transition: all var(--homePageTransitionDuration), opacity var(--homePageImageTransitionDuration);
    }

    /* About me and projects button */
    button {
        z-index: 1;
        width: 50%;
        height: calc(var(--homePageSectionHeight) * 0.075);
        border-radius: calc(var(--homePageSectionBorderRadius) * 0.5);
        background: var(--homePageColorOne);
        border: none;
        font-size: 1.25rem;
        transition: all var(--homePageTransitionDuration);
        font-weight: 500;

        /* On hover, change own color and other border colors */
        &:hover {
            cursor: pointer;
            background: var(--homePageColorTwo);

            ~ .animatedBorder {
                .line {
                    stroke: var(--homePageColorTwo);
                }
            }

            ~ .homePageImageContainer {
                border-color: var(--homePageColorTwo);
            }
        }
    }

    /* Make bigger on section hover, cause border to appear */
    &:hover {
        width: calc(var(--homePageSectionWidth) * 1.2);
        height: calc(var(--homePageSectionHeight) * 1.2);
        background-color: rgba(50, 50, 50, 0.9);
        box-shadow: 0px 0px 30px white;

        .animatedBorder {
            width: calc(var(--homePageSectionWidth) * 1.2);
            height: calc(var(--homePageSectionHeight) * 1.2);
            opacity: 100%;
        }

        .line[data-animate='true'] {
            width: calc(var(--homePageSectionWidth) * 1.2);
            height: calc(var(--homePageSectionHeight) * 1.2);
            opacity: 100%;
            animation: borderAnimation 5.0s linear infinite;
        }

        button {
            font-size: 1.5rem;
        }
    }
}

/* Allows the other section to shrink when one section is hovered on */
#homePageContent:has(#aboutMeContainer:hover) #projectsContainer,
#homePageContent:has(#projectsContainer:hover) #aboutMeContainer {
    width: calc(var(--homePageSectionWidth) * 0.8);
    height: calc(var(--homePageSectionHeight) * 0.8);
    opacity: 50%;
}

/* BELOW CSS IS MODIFIED FROM https://www.letsbuildui.dev/articles/how-to-animate-borders-in-css/ */
.animatedBorder, .line {
    width: var(--homePageSectionWidth);
    height: var(--homePageSectionHeight);
    transition: all var(--homePageTransitionDuration);
    opacity: 0%;
}

.animatedBorder {
    position: absolute;
    z-index: 0;
    border-radius: var(--homePageSectionBorderRadius);
}

.line {
    rx: var(--homePageSectionBorderRadius);
    ry: var(--homePageSectionBorderRadius);
    stroke-linejoin: round;
    stroke-dasharray: 50;
    stroke-width: 10px;
    fill: transparent;
    stroke: var(--homePageColorOne);
}

@keyframes borderAnimation {
    from {
        stroke-dashoffset: 0;
    }
    to {
        stroke-dashoffset: 500;
    }
}
/* ---------------------------------------------------------------------------------------------- */

/* BELOW CSS IS MODIFIED FROM https://nerdy.dev/6-css-snippets-every-front-end-developer-should-know-in-2025 */
@property --color-1 {
    syntax: "<color>";
    inherits: false;
    initial-value: #000;
}
  
@property --color-2 {
    syntax: "<color>";
    inherits: false;
    initial-value: #000;
}
  
@keyframes color-change {
    to {
        --color-1: var(--_color-1-to);
        --color-2: var(--_color-2-to);
    }
}
  
#homePageTitle {
    --_space: ;

    --_color-1-from: var(--homePageColorOne);
    --_color-1-to: var(--homePageColorTwo);
    --_color-2-from: var(--homePageColorTwo);
    --_color-2-to: var(--homePageColorOne);

    --color-1: var(--_color-1-from);
    --color-2: var(--_color-2-from);

    animation: color-change 2s linear infinite alternate;

    background: linear-gradient(
        to right var(--_space),
        var(--color-1),
        var(--color-2)
    );

    /* modern browser version */
    background-clip: text;
    color: transparent;

    @supports (background: linear-gradient(in oklch, #fff, #fff)) {
        --_space: in oklch;
    }
}
/* ---------------------------------------------------------------------------------- */